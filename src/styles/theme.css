:root {
  --fg: #1b1f23;
  --muted: #6b7280;
  --line: #d8dbe0;
  --bg: #f7f8fa;
  --accent: #ffb400;
  --root: #ff6a00;
  --fret: #c9cdd3;
  --board: #f2f3f6;
  --panel: #ffffff;

  &[data-theme="dark"] {
    --fg: #e5e7eb;
    --muted: #9ca3af;
    --line: #3a3f46;
    --bg: #101214;
    --panel: #15171a;
    --board: #1a1d21;
    --fret: #2a2f35;
    --accent: #ffc24b;
    --root: #ff7a3d;
  }
}

/* Layout */
.layout {
  display: grid;
  grid-template-columns: 300px 1fr;
  height: 100vh;
  gap: 0;
  background: var(--bg);
  color: var(--fg);

  &-full {
    grid-template-columns: 0 1fr;
  }
}

.panel {
  background: var(--panel);
  border-right: 1px solid var(--line);
  padding: 14px 14px 24px;
  overflow: auto;

  h1 {
    font-size: 16px;
    margin: 0;
  }
}

.panel-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  padding: 8px 12px;

  a {
    svg {
      width: 20px !important;
      height: 20px !important;
    }
  }
}

.app-title {
  margin: 0;
  font-size: 1.125rem;
  font-weight: 700;
}

.header-right {
  display: flex;
  align-items: center;
  gap: 12px;
}

.toggles {
  display: flex;
  align-items: center;
  gap: 12px;
}

.gh-link {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  border-radius: 6px;
  color: var(--muted);
  text-decoration: none;

  &:hover {
    color: var(--fg);
    background: var(--line);
  }

  svg {
    width: 20px;
    height: 20px;
    flex: 0 0 20px;
  }
}

.switch {
  display: flex;
  gap: 6px;
  align-items: center;
  font-size: 12px;
  color: var(--muted);
}

.panel-sec {
  border: 1px solid var(--line);
  border-radius: 12px;
  margin-bottom: 12px;
  background: var(--panel);
}

.sec-header {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 12px;
  border: 0;
  background: transparent;
  color: var(--fg);
  font-weight: 600;
  cursor: pointer;
}

.sec-body {
  padding: 10px 12px;
  display: grid;
  gap: 10px;
}

.chev {
  color: var(--muted);
}

.grid2 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 10px;
}

.tuning-grid {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  gap: 10px;
}

.field {
  display: flex;
  flex-direction: column;
  gap: 6px;
  font-size: 12px;

  > span {
    color: var(--muted);
  }
}

select,
input[type="number"],
input[type="range"] {
  padding: 8px;
  border: 1px solid var(--line);
  border-radius: 10px;
  background: transparent;
  color: var(--fg);
}

.check {
  font-size: 12px;
  color: var(--muted);
  display: flex;
  gap: 8px;
  align-items: center;
}

.btn {
  padding: 9px 12px;
  border: 1px solid var(--line);
  border-radius: 10px;
  background: transparent;
  color: var(--fg);
  cursor: pointer;

  &:hover {
    background: rgba(127, 127, 127, 0.08);
  }

  &.solid {
    background: var(--fg);
    color: var(--panel);
    border-color: var(--fg);

    &:hover {
      opacity: 0.9;
    }
  }
}

.stage {
  position: relative;
  overflow: auto;

  &-inner {
    padding: 18px;
  }

  /* Floating toolbar (fullscreen) */
  &-toolbar {
    position: sticky;
    top: 0;
    display: flex;
    justify-content: flex-end;
    gap: 8px;
    padding: 10px;
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.06), transparent);
    z-index: 3;
  }
}

/* Fretboard visuals */
.fretboard-wrap {
  flex: 1; /* let it expand */
  display: flex; /* svg can flex inside */
  align-items: stretch;
  justify-content: stretch;
  overflow: auto;
  border: 1px solid var(--line);
  border-radius: 14px;
  background: var(--panel);
  padding: 10px;

  svg {
    flex: 1;
    width: 100%;
    height: 100%; /* fill parent vertically */
    display: block;
  }

  &.lefty {
    svg {
      transform: scaleX(-1);
    }
  }
}

.fretboard svg,
.lefty {
  display: block;
  width: 100%;
  height: auto; /* CSS ok; attribute must be omitted */
}

/* — microtonal fret visualization — */
.fretLine {
  &.micro {
    stroke: var(--fret);
    stroke-width: 1.2;
    stroke-dasharray: 3 7;
    opacity: 0.7;
  }

  /* octave wires already have .strong; ensure they pop */
  &.strong {
    stroke-width: 2;
  }
}

/* micro fret numbers are dimmer */
.fretNum {
  font-size: 12px;
  fill: var(--muted);

  &.microNum {
    opacity: 0.55;
  }
}

/* Instrument panel layout */
.instrument {
  display: grid;
  gap: 12px;
  min-width: 0;

  /* “Strings / Frets” row */
  .row-2 {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 12px;
    min-width: 0;
  }

  /* String selectors: auto-wrap into as many columns as fit */
  .strings-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(110px, 1fr));
    gap: 12px;
    min-width: 0;
  }

  /* Make controls shrink properly inside grids */
  input,
  select {
    width: 100%;
    min-width: 0; /* critical to prevent overflow in grid/flex */
    box-sizing: border-box;
  }

  /* Let long button labels wrap instead of pushing container wider */
  .btn {
    width: 100%;
    white-space: normal;
    line-height: 1.2;
  }
}

/* If your Section/Panel uses flex, ensure children can shrink */
.section,
.panel,
.sidebar {
  min-width: 0;
}

svg {
  display: block;
  width: 100%;
  height: auto;
}

.noteText {
  font-size: 11px;
  font-weight: 700;
  pointer-events: none;
  fill: #111;

  &.big {
    font-size: 12px;
  }
}

/* keep order: dark theme override uses parent selector to preserve specificity */
:root[data-theme="dark"] .noteText {
  fill: #0b0b0b;
}

/* keep this early .nut (source kept intact) */
.nut {
  fill: #111;
}

.fretLine {
  stroke: var(--fret);
  stroke-width: 1.5;

  &.strong {
    stroke-width: 1.8;
  }
}

.stringLine {
  stroke: #8b929a;
  stroke-width: 1.6;
}

.inlay {
  fill: #cfd5dd;

  &.big {
    r: 7;
  }

  &.small {
    fill: var(--line);
    stroke: var(--fg);
    stroke-width: 0.6;
    opacity: 0.9;
  }
}

/* dark override (preserve original selector for specificity) */
:root[data-theme="dark"] .inlay {
  fill: #3b4149;
}

/* later .nut definition (order preserved) */
.nut {
  fill: var(--nut);
  stroke: #000;
  stroke-width: 2.5;
}

:root {
  --nut: #fffbe6;
  --note: var(--accent);
  --note-micro: #6fa8dc;

  &[data-theme="dark"] {
    --nut: #dcdcdc;
    --note: var(--accent);
    --note-micro: #89c2ff;
  }
}

/* Responsive */
@media (max-width: 1100px) {
  .layout {
    grid-template-columns: 260px 1fr;
  }
}

@media (max-width: 900px) {
  .layout {
    grid-template-columns: 1fr;
  }

  .panel {
    border-right: none;
    border-bottom: 1px solid var(--line);
  }
}

@media (max-width: 700px) {
  .grid2 {
    grid-template-columns: 1fr;
  }

  .tuning-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .panel {
    padding: 10px;
  }

  .stage-inner {
    padding: 12px;
  }
}

@media (max-width: 420px) {
  .tuning-grid {
    grid-template-columns: 1fr;
  }
}

@media print {
  * {
    -webkit-print-color-adjust: exact;
    print-color-adjust: exact;
  }

  .panel {
    display: none !important;
  }

  .layout {
    grid-template-columns: 1fr !important;
  }
}
